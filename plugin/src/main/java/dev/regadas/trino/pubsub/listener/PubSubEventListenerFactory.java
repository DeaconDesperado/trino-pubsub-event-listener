/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dev.regadas.trino.pubsub.listener;

import com.google.inject.Injector;
import com.google.inject.Scopes;
import io.airlift.bootstrap.Bootstrap;
import io.airlift.json.JsonModule;
import io.trino.spi.eventlistener.EventListener;
import io.trino.spi.eventlistener.EventListenerFactory;
import io.trino.spi.eventlistener.QueryCompletedEvent;
import io.trino.spi.eventlistener.QueryCreatedEvent;
import io.trino.spi.eventlistener.SplitCompletedEvent;

import java.util.Map;

import static io.airlift.configuration.ConfigBinder.configBinder;
import static io.airlift.http.client.HttpClientBinder.httpClientBinder;
import static io.airlift.json.JsonCodecBinder.jsonCodecBinder;

public class PubSubEventListenerFactory implements EventListenerFactory {
    @Override
    public String getName() {
        return "pubsub";
    }

    @Override
    public EventListener create(Map<String, String> config) {
        Bootstrap app = new Bootstrap(
                new JsonModule(),
                binder -> {
                    jsonCodecBinder(binder).bindJsonCodec(QueryCompletedEvent.class);
                    jsonCodecBinder(binder).bindJsonCodec(QueryCreatedEvent.class);
                    jsonCodecBinder(binder).bindJsonCodec(SplitCompletedEvent.class);
                    // configBinder(binder).bindConfig(HttpEventListenerConfig.class);
                    // httpClientBinder(binder).bindHttpClient("http-event-listener",
                    // ForHttpEventListener.class);
                    binder.bind(PubSubEventListener.class).in(Scopes.SINGLETON);
                });

        Injector injector = app
                .doNotInitializeLogging()
                .setRequiredConfigurationProperties(config)
                .initialize();

        return injector.getInstance(PubSubEventListener.class);
    }

}
